// <auto-generated />
using System;
using Izm.Rumis.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Izm.Rumis.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231128150523_AddForeginKeysToLog")]
    partial class AddForeginKeysToLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ApplicationDuplicateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ApplicationNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ApplicationStatusHistory")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ApplicationStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContactPersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("DeclineReason")
                        .HasColumnType("longtext");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int?>("MonitoringClassGrade")
                        .HasColumnType("int");

                    b.Property<string>("MonitoringClassParallel")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MonitoringEducationalStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("MonitoringEducationalSubStatusId")
                        .HasColumnType("char(36)");

                    b.Property<string>("MonitoringGroup")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MonitoringWorkStatusId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("ResourceTargetPersonClassGrade")
                        .HasColumnType("int");

                    b.Property<string>("ResourceTargetPersonClassParallel")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ResourceTargetPersonEducationalProgram")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ResourceTargetPersonEducationalStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceTargetPersonEducationalSubStatusId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ResourceTargetPersonGroup")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ResourceTargetPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceTargetPersonTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceTargetPersonWorkStatusId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("SocialStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("SocialStatusApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SubmitterPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubmitterTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDuplicateId");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("ContactPersonId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("MonitoringEducationalStatusId");

                    b.HasIndex("MonitoringEducationalSubStatusId");

                    b.HasIndex("MonitoringWorkStatusId");

                    b.HasIndex("ResourceSubTypeId");

                    b.HasIndex("ResourceTargetPersonEducationalStatusId");

                    b.HasIndex("ResourceTargetPersonEducationalSubStatusId");

                    b.HasIndex("ResourceTargetPersonId");

                    b.HasIndex("ResourceTargetPersonTypeId");

                    b.HasIndex("ResourceTargetPersonWorkStatusId");

                    b.HasIndex("SubmitterPersonId");

                    b.HasIndex("SubmitterTypeId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("AttachmentDate")
                        .HasColumnType("date");

                    b.Property<string>("AttachmentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FileId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationAttachments");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AssignedResourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AssignedResourceReturnDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("AssignedResourceStateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CancelingDescription")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CancelingReasonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("PNANumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PNAStatusId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ReturnResourceDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ReturnResourceStateId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("AssignedResourceId");

                    b.HasIndex("AssignedResourceStateId");

                    b.HasIndex("CancelingReasonId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PNAStatusId");

                    b.HasIndex("ReturnResourceStateId");

                    b.ToTable("ApplicationResources");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourceAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationResourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<int?>("DocumentTemplateId")
                        .HasColumnType("int");

                    b.Property<Guid?>("DocumentTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationResourceId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DocumentTemplateId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("FileId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationResourceAttachments");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourceContactPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationResourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EducationalInstitutionContactPersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationResourceId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionContactPersonId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationResourceContactPersons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationSocialStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("SocialStatusApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SocialStatusId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SocialStatusId");

                    b.ToTable("ApplicationSocialStatuses");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Classifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ActiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Payload")
                        .HasColumnType("longtext");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Classifiers");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ContactPersonResourceSubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EducationalInstitutionContactPersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionContactPersonId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceSubTypeId");

                    b.ToTable("ContactPersonResourceSubTypes");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.DocumentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<Guid>("FileId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("Hyperlink")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ResourceTypeId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateOnly?>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ValidTo")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceTypeId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("District")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Municipality")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Village")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("EducationalInstitutions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitutionContactPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("JobPositionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EducationalInstitutionContactPersons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitutionResourceSubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TargetPersonGroupTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceSubTypeId");

                    b.HasIndex("TargetPersonGroupTypeId");

                    b.ToTable("EducationalInstitutionResourceSubTypes");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BucketName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Content")
                        .HasColumnType("longblob");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Extension")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.GdprAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ActionData")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DataHandlerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DataHandlerPrivatePersonalIdentifier")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<Guid?>("DataOwnerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DataOwnerPrivatePersonalIdentifier")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitOfWorkId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserProfileId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("DataHandlerId");

                    b.HasIndex("DataHandlerPrivatePersonalIdentifier");

                    b.HasIndex("DataOwnerId");

                    b.HasIndex("DataOwnerPrivatePersonalIdentifier");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("GdprAudits");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.GdprAuditData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("GdprAuditId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GdprAuditId");

                    b.ToTable("GdprAuditData");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonTechnicalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PrivatePersonalIdentifier")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PersonTechnicalId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContactTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonTechnicalId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PersonTechnicalId");

                    b.ToTable("PersonContacts");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonDataReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PrivatePersonlIdentifier")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("ReasonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ReasonId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("PersonDataReports");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PersonTechnicals");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AcquisitionTypeId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AcquisitionsValue")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModelIdentifier")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ModelNameId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResourceGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceLocationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ResourceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ResourceStatusHistory")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ResourceStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("SocialSupportResource")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TargetGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsagePurposeTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelNameId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceGroupId");

                    b.HasIndex("ResourceLocationId");

                    b.HasIndex("ResourceStatusId");

                    b.HasIndex("ResourceSubTypeId");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("UsagePurposeTypeId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ResourceParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ParameterId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParameterId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceParameters");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.TextTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("TextTemplates");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTechnical")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConfigurationInfo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("InstitutionId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ProfileCreationDocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProfileCreationDocumentNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("IdentityUsers");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuthType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("MustResetPassword")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordResetKey")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserLogins");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Logging.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RequestMethod")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SessionId")
                        .HasColumnType("longtext");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Thread")
                        .HasColumnType("longtext");

                    b.Property<string>("TraceId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserProfileId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("Level");

                    b.HasIndex("PersonId");

                    b.HasIndex("RequestMethod");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Sessions.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("RoleUserProfile", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserProfilesId")
                        .HasColumnType("char(36)");

                    b.HasKey("RolesId", "UserProfilesId");

                    b.HasIndex("UserProfilesId");

                    b.ToTable("RoleUserProfile");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Application", "ApplicationDuplicate")
                        .WithMany()
                        .HasForeignKey("ApplicationDuplicateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ApplicationStatus")
                        .WithMany()
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("ContactPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany("Applications")
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "MonitoringEducationalStatus")
                        .WithMany()
                        .HasForeignKey("MonitoringEducationalStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "MonitoringEducationalSubStatus")
                        .WithMany()
                        .HasForeignKey("MonitoringEducationalSubStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "MonitoringWorkStatus")
                        .WithMany()
                        .HasForeignKey("MonitoringWorkStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonEducationalStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonEducationalStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonEducationalSubStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonEducationalSubStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "ResourceTargetPerson")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonType")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonWorkStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonWorkStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "SubmitterPerson")
                        .WithMany()
                        .HasForeignKey("SubmitterPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "SubmitterType")
                        .WithMany()
                        .HasForeignKey("SubmitterTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationDuplicate");

                    b.Navigation("ApplicationStatus");

                    b.Navigation("ContactPerson");

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("MonitoringEducationalStatus");

                    b.Navigation("MonitoringEducationalSubStatus");

                    b.Navigation("MonitoringWorkStatus");

                    b.Navigation("ResourceSubType");

                    b.Navigation("ResourceTargetPerson");

                    b.Navigation("ResourceTargetPersonEducationalStatus");

                    b.Navigation("ResourceTargetPersonEducationalSubStatus");

                    b.Navigation("ResourceTargetPersonType");

                    b.Navigation("ResourceTargetPersonWorkStatus");

                    b.Navigation("SubmitterPerson");

                    b.Navigation("SubmitterType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationAttachment", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("CreatedBy");

                    b.Navigation("File");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResource", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Application", "Application")
                        .WithMany("ApplicationResources")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Resource", "AssignedResource")
                        .WithMany()
                        .HasForeignKey("AssignedResourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "AssignedResourceState")
                        .WithMany()
                        .HasForeignKey("AssignedResourceStateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "CancelingReason")
                        .WithMany()
                        .HasForeignKey("CancelingReasonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "PNAStatus")
                        .WithMany()
                        .HasForeignKey("PNAStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ReturnResourceState")
                        .WithMany()
                        .HasForeignKey("ReturnResourceStateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Application");

                    b.Navigation("AssignedResource");

                    b.Navigation("AssignedResourceState");

                    b.Navigation("CancelingReason");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PNAStatus");

                    b.Navigation("ReturnResourceState");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourceAttachment", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.ApplicationResource", "ApplicationResource")
                        .WithMany("ApplicationResourceAttachmentList")
                        .HasForeignKey("ApplicationResourceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.DocumentTemplate", "DocumentTemplate")
                        .WithMany()
                        .HasForeignKey("DocumentTemplateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationResource");

                    b.Navigation("CreatedBy");

                    b.Navigation("DocumentTemplate");

                    b.Navigation("DocumentType");

                    b.Navigation("File");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourceContactPerson", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.ApplicationResource", "ApplicationResource")
                        .WithMany("ApplicationResourceContactPersons")
                        .HasForeignKey("ApplicationResourceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitutionContactPerson", "EducationalInstitutionContactPerson")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionContactPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationResource");

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitutionContactPerson");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationSocialStatus", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Application", "Application")
                        .WithMany("ApplicationSocialStatuses")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "SocialStatus")
                        .WithMany()
                        .HasForeignKey("SocialStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("SocialStatus");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Classifier", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ContactPersonResourceSubType", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitutionContactPerson", "EducationalInstitutionContactPerson")
                        .WithMany("ContactPersonResourceSubTypes")
                        .HasForeignKey("EducationalInstitutionContactPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitutionContactPerson");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceSubType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.DocumentTemplate", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("DocumentTemplates")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceType");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitution", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("EducationalInstitutions")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Status");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitutionContactPerson", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany("EducationalInstitutionContactPersons")
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "JobPosition")
                        .WithMany()
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("JobPosition");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitutionResourceSubType", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany("EducationalInstitutionResourceSubTypes")
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "TargetPersonGroupType")
                        .WithMany()
                        .HasForeignKey("TargetPersonGroupTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceSubType");

                    b.Navigation("TargetPersonGroupType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.File", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.GdprAudit", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "DataHandler")
                        .WithMany()
                        .HasForeignKey("DataHandlerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "DataOwner")
                        .WithMany()
                        .HasForeignKey("DataOwnerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DataHandler");

                    b.Navigation("DataOwner");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Supervisor");

                    b.Navigation("User");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.GdprAuditData", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.GdprAudit", "Gdpr")
                        .WithMany("Data")
                        .HasForeignKey("GdprAuditId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Gdpr");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Parameter", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Person", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "PersonTechnical")
                        .WithMany("Persons")
                        .HasForeignKey("PersonTechnicalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PersonTechnical");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonContact", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ContactType")
                        .WithMany()
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "PersonTechnical")
                        .WithMany("PersonContacts")
                        .HasForeignKey("PersonTechnicalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContactType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PersonTechnical");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonDataReport", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Reason");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithOne("PersonTechnical")
                        .HasForeignKey("Izm.Rumis.Domain.Entities.PersonTechnical", "UserId");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Resource", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "AcquisitionType")
                        .WithMany()
                        .HasForeignKey("AcquisitionTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany("Resources")
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ModelName")
                        .WithMany()
                        .HasForeignKey("ModelNameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceGroup")
                        .WithMany()
                        .HasForeignKey("ResourceGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceLocation")
                        .WithMany()
                        .HasForeignKey("ResourceLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceStatus")
                        .WithMany()
                        .HasForeignKey("ResourceStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "TargetGroup")
                        .WithMany()
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "UsagePurposeType")
                        .WithMany()
                        .HasForeignKey("UsagePurposeTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcquisitionType");

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Manufacturer");

                    b.Navigation("ModelName");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceGroup");

                    b.Navigation("ResourceLocation");

                    b.Navigation("ResourceStatus");

                    b.Navigation("ResourceSubType");

                    b.Navigation("TargetGroup");

                    b.Navigation("UsagePurposeType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ResourceParameter", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Resource", null)
                        .WithMany("ResourceParameters")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Supervisor", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.TextTemplate", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.UserProfile", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Institution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Supervisor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithOne()
                        .HasForeignKey("Izm.Rumis.Infrastructure.Identity.IdentityUser", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityUser", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Logging.Log", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Person");

                    b.Navigation("Supervisor");

                    b.Navigation("User");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("RoleUserProfile", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfilesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.Navigation("ApplicationResources");

                    b.Navigation("ApplicationSocialStatuses");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResource", b =>
                {
                    b.Navigation("ApplicationResourceAttachmentList");

                    b.Navigation("ApplicationResourceContactPersons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitution", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("EducationalInstitutionContactPersons");

                    b.Navigation("EducationalInstitutionResourceSubTypes");

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitutionContactPerson", b =>
                {
                    b.Navigation("ContactPersonResourceSubTypes");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.GdprAudit", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.Navigation("PersonContacts");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Resource", b =>
                {
                    b.Navigation("ResourceParameters");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("DocumentTemplates");

                    b.Navigation("EducationalInstitutions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.Navigation("PersonTechnical");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.Navigation("Logins");
                });
#pragma warning restore 612, 618
        }
    }
}
