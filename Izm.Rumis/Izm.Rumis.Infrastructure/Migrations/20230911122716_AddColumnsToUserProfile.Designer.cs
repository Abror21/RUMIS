// <auto-generated />
using System;
using Izm.Rumis.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Izm.Rumis.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230911122716_AddColumnsToUserProfile")]
    partial class AddColumnsToUserProfile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ApplicationStatusHistory")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ApplicationStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContactPersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("ResourceTargetPersonClassGrade")
                        .HasColumnType("int");

                    b.Property<string>("ResourceTargetPersonClassParallel")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ResourceTargetPersonEducationalProgram")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("ResourceTargetPersonEducationalStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceTargetPersonEducationalSubStatusId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ResourceTargetPersonGroup")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ResourceTargetPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceTargetPersonTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceTargetPersonWorkStatusId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("SocialStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SubmitterPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubmitterTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("ContactPersonId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceSubTypeId");

                    b.HasIndex("ResourceTargetPersonEducationalStatusId");

                    b.HasIndex("ResourceTargetPersonEducationalSubStatusId");

                    b.HasIndex("ResourceTargetPersonId");

                    b.HasIndex("ResourceTargetPersonTypeId");

                    b.HasIndex("ResourceTargetPersonWorkStatusId");

                    b.HasIndex("SubmitterPersonId");

                    b.HasIndex("SubmitterTypeId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("AssignedResourceDiffer")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("AssignedResourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AssignedResourceReturnDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("AssignedResourceStateId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AssignedResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedResourceId");

                    b.HasIndex("AssignedResourceStateId");

                    b.HasIndex("AssignedResourceSubTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ApplicationResources");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourcePna", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationResourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("DocumentTemplateId")
                        .HasColumnType("int");

                    b.Property<Guid>("DocumentTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("PNADate")
                        .HasColumnType("date");

                    b.Property<string>("PNANumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PNAStatusId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DocumentTemplateId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("FileId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PNAStatusId");

                    b.ToTable("ApplicationResourcePna");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationSocialStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SocialStatusId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SocialStatusId");

                    b.ToTable("ApplicationSocialStatuses");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Classifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ActiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Payload")
                        .HasColumnType("longtext");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Classifiers");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.DocumentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("FounderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FounderId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EducationalInstitutions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BucketName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Content")
                        .HasColumnType("longblob");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Extension")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Founder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Founders");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonTechnicalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PrivatePersonalIdentifier")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PersonTechnicalId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContactTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PersonTechnicalId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PersonTechnicalId");

                    b.ToTable("PersonContacts");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PersonTechnicals");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AcquisitionTypeId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AcquisitionsValue")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModelIdentifier")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("ModelNameId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResourceGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceLocationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ResourceNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ResourceStatusHistory")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResourceStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ResourceSubTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("TargetGroupId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsagePurposeTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelNameId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ResourceGroupId");

                    b.HasIndex("ResourceLocationId");

                    b.HasIndex("ResourceStatusId");

                    b.HasIndex("ResourceSubTypeId");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("UsagePurposeTypeId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.TextTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("TextTemplates");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTechnical")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConfigurationInfo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EducationalInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.Property<int?>("FounderId")
                        .HasColumnType("int");

                    b.Property<Guid?>("InstitutionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ProfileCreationDocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProfileCreationDocumentNumber")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("FounderId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("IdentityClaims");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserLoginId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserLoginId");

                    b.ToTable("IdentityRefreshTokens");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ExternalName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("IdentityRoles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityRoleClaims");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("IdentityUsers");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuthType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("MustResetPassword")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordResetKey")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserLogins");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserRoles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Logging.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasColumnType("longtext");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Thread")
                        .HasColumnType("longtext");

                    b.Property<string>("TraceId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("RoleUserProfile", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserProfilesId")
                        .HasColumnType("char(36)");

                    b.HasKey("RolesId", "UserProfilesId");

                    b.HasIndex("UserProfilesId");

                    b.ToTable("RoleUserProfile");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ApplicationStatus")
                        .WithMany()
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("ContactPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonEducationalStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonEducationalStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonEducationalSubStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonEducationalSubStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "ResourceTargetPerson")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonType")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceTargetPersonWorkStatus")
                        .WithMany()
                        .HasForeignKey("ResourceTargetPersonWorkStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "SubmitterPerson")
                        .WithMany()
                        .HasForeignKey("SubmitterPersonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "SubmitterType")
                        .WithMany()
                        .HasForeignKey("SubmitterTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");

                    b.Navigation("ContactPerson");

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceSubType");

                    b.Navigation("ResourceTargetPerson");

                    b.Navigation("ResourceTargetPersonEducationalStatus");

                    b.Navigation("ResourceTargetPersonEducationalSubStatus");

                    b.Navigation("ResourceTargetPersonType");

                    b.Navigation("ResourceTargetPersonWorkStatus");

                    b.Navigation("SubmitterPerson");

                    b.Navigation("SubmitterType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResource", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Resource", "AssignedResource")
                        .WithMany()
                        .HasForeignKey("AssignedResourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "AssignedResourceState")
                        .WithMany()
                        .HasForeignKey("AssignedResourceStateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "AssignedResourceSubType")
                        .WithMany()
                        .HasForeignKey("AssignedResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AssignedResource");

                    b.Navigation("AssignedResourceState");

                    b.Navigation("AssignedResourceSubType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationResourcePna", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.DocumentTemplate", "DocumentTemplate")
                        .WithMany()
                        .HasForeignKey("DocumentTemplateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "PNAStatus")
                        .WithMany()
                        .HasForeignKey("PNAStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DocumentTemplate");

                    b.Navigation("DocumentType");

                    b.Navigation("File");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PNAStatus");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.ApplicationSocialStatus", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Application", "Application")
                        .WithMany("ApplicationSocialStatuses")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "SocialStatus")
                        .WithMany()
                        .HasForeignKey("SocialStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("SocialStatus");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Classifier", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.DocumentTemplate", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.EducationalInstitution", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Founder", "Founder")
                        .WithMany()
                        .HasForeignKey("FounderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Founder");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.File", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Founder", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Parameter", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Person", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "PersonTechnical")
                        .WithMany("Persons")
                        .HasForeignKey("PersonTechnicalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PersonTechnical");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonContact", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ContactType")
                        .WithMany()
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.PersonTechnical", "PersonTechnical")
                        .WithMany("PersonContacts")
                        .HasForeignKey("PersonTechnicalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ContactType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PersonTechnical");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithOne("PersonTechnical")
                        .HasForeignKey("Izm.Rumis.Domain.Entities.PersonTechnical", "UserId");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Resource", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "AcquisitionType")
                        .WithMany()
                        .HasForeignKey("AcquisitionTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ModelName")
                        .WithMany()
                        .HasForeignKey("ModelNameId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceGroup")
                        .WithMany()
                        .HasForeignKey("ResourceGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceLocation")
                        .WithMany()
                        .HasForeignKey("ResourceLocationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceStatus")
                        .WithMany()
                        .HasForeignKey("ResourceStatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "TargetGroup")
                        .WithMany()
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "UsagePurposeType")
                        .WithMany()
                        .HasForeignKey("UsagePurposeTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AcquisitionType");

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Manufacturer");

                    b.Navigation("ModelName");

                    b.Navigation("ModifiedBy");

                    b.Navigation("ResourceGroup");

                    b.Navigation("ResourceLocation");

                    b.Navigation("ResourceStatus");

                    b.Navigation("ResourceSubType");

                    b.Navigation("TargetGroup");

                    b.Navigation("UsagePurposeType");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.TextTemplate", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.UserProfile", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Founder", "Founder")
                        .WithMany()
                        .HasForeignKey("FounderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.Classifier", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("EducationalInstitution");

                    b.Navigation("Founder");

                    b.Navigation("Institution");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityClaim", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRefreshToken", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", "UserLogin")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRole", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRoleClaim", b =>
                {
                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityClaim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityRole", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityUser", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserRole", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Infrastructure.Identity.IdentityUser", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoleUserProfile", b =>
                {
                    b.HasOne("Izm.Rumis.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Izm.Rumis.Domain.Entities.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfilesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Application", b =>
                {
                    b.Navigation("ApplicationSocialStatuses");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.PersonTechnical", b =>
                {
                    b.Navigation("PersonContacts");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Izm.Rumis.Domain.Entities.User", b =>
                {
                    b.Navigation("PersonTechnical");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityRole", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUser", b =>
                {
                    b.Navigation("Logins");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Izm.Rumis.Infrastructure.Identity.IdentityUserLogin", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
